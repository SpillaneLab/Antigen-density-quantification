  //This macro gets mean fluorescence intensities for antigen density quantification 
  	
  //Select all relevant directories 
  
   dir = getDirectory("Choose a directory ");
   outputDir = getDirectory("Select an output directory");
   setBatchMode(true);
   count = 0;
   countFiles(dir);
   n = 0;
   processFiles(dir);
   //print(count+" files processed");
   
   function countFiles(dir) {
      list = getFileList(dir);
      for (i=0; i<list.length; i++) {
          if (endsWith(list[i], "/"))
              countFiles(""+dir+list[i]);
          else
              count++;
      }
  }

   function processFiles(dir) {
      list = getFileList(dir);
      for (i=0; i<list.length; i++) {
          if (endsWith(list[i], "/"))
              processFiles(""+dir+list[i]);
          else {
             showProgress(n++, count);
             path = dir+list[i];
             processFile(path);
          }
      }
  }

  function processFile(path) {
       if (endsWith(path, ".tif")) {
       		//Open the image
       		open(path);
       		
       		//Get the file name 
       		imagesName=getTitle();
       		
       		//Duplicate the image 
       		run("Duplicate...", " ");
       		
       		//Set image properties
       		run("Properties...", "channels=1 slices=1 frames=1 unit=Âµm pixel_width=0.11 pixel_height=0.11 voxel_depth=1.0000000");
       		
       		//Rename the image
       		rename("Image");
       		
		//Subtract background counts - change for microscope used
       		run("Subtract...", "value=100");
	
		//Crop to remove uneven illumination at the edges
		makeRectangle(360, 360, 400, 300);
		run("Crop");
		
		//Rename resulting image
		rename("Crop");
			
       		//Measure mean fluorescence intensity for the image
		run("Set Measurements...", "mean redirect=None decimal=3");
		run("Measure");
		
		//Save the processed image
		selectWindow("Crop");
		outName1 = "Processed_" + imagesName;
		saveAs("tif", outputDir + "/" + outName1);
			
       		//Close everything before opening a new image for the same condition
		run("Close All");
      }
  }

	//Save the results table
	saveAs("Results", outputDir + "/Results.csv");
	run("Clear Results");
